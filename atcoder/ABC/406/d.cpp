#include <bits/stdc++.h>
using namespace std;
#define int long long
#define debug(x) cerr << #x << " = " << (x) << endl
#define debugv(v) { cerr << #v << " = [ "; for (auto x : v) cerr << x << " "; cerr << "]" << endl; }
#define all(x) (x).begin(),(x).end()
void solve();
#define endl '\n'

const long long INF = 0x3f3f3f3f;
const long long MOD = 1e9; //模数


signed main (){ 
	std::cin.tie(NULL)->sync_with_stdio(false);
	int t = 1;
	// cin >> t;  //atc默认关闭，cf按需开启
	while(t --)
		solve();
}

void solve(){
	int H, W, N;
    cin >> H >> W >> N;

    vector<unordered_set<int>> row(H + 1), col(W + 1);
    vector<int> X(N), Y(N);

    for (int i = 0; i < N; ++i) {
        int x, y;
        cin >> x >> y;
        X[i] = x;
        Y[i] = y;
        row[x].insert(i);
        col[y].insert(i);
    }

    vector<bool> erased(H + 1, 0), removed(W + 1, 0);

    int Q;
    cin >> Q;

    while (Q--) {
        int t, x;
        cin >> t >> x;

        if (t == 1) {
            if (erased[x]) {
                cout << 0 << '\n';
                continue;
            }

            int ans = row[x].size();
            cout << ans << '\n';

            for (int i : row[x]) {
                int y = Y[i];
                col[y].erase(i);
            }

            row[x].clear();
            erased[x] = 1;
        } else {
            if (removed[x]) {
                cout << 0 << '\n';
                continue;
            }

            int ans = col[x].size();
            cout << ans << '\n';

            for (int i : col[x]) {
                int x_row = X[i];
                row[x_row].erase(i);
            }

            col[x].clear();
            removed[x] = 1;
        }
    }

}
//test
/*
?
// ? (?????) ?
*/

/*
What's wrong with my code?
1. 小数据？特殊数据？如 n = 1?
2. 最小值，最大值取多少？是否会溢出？
3. 初始值有没有赋值？有没有建树？
4. 数组大小？是否越界？
5. 思考暴力的时候，考虑是否可能是多个连续段？或者是个数不确定无法暴力？是否可以分治暴力？
6. 进行详细的分类讨论?
7. 选择的区间是否可以为空？

Trick:
1. 
2. 
3. 

About implementation skills:
1. 全局常量均大写字母，而局部变量，临时变量，和函数传递的参数使用小写字母。
2. 大模拟尽量遵循：怎么方便怎么写。
3. 对于一些数据很小的需要维护的量并且需要大量讨论时，可以考虑把数组拆掉换成变量。
4. 写成多个函数。
*/